# Use Red Hat UBI as base for better RHEL compatibility
FROM registry.access.redhat.com/ubi9/ubi:latest

# Metadata
LABEL name="rhel-stig-rag" \
      version="1.0.0" \
      description="RHEL STIG RAG System - Podman Container" \
      maintainer="stig-rag-team" \
      io.opencontainers.image.title="RHEL STIG RAG System" \
      io.opencontainers.image.description="AI-powered RHEL STIG compliance assistant" \
      io.opencontainers.image.version="1.0.0"

# Set working directory
WORKDIR /app

# Install system dependencies
RUN dnf update -y && \
    dnf install -y \
        python3 \
        python3-pip \
        python3-devel \
        gcc \
        gcc-c++ \
        git \
        curl \
        unzip \
        && dnf clean all \
        && rm -rf /var/cache/dnf

# Create non-root user for security
RUN useradd -r -u 1001 -g 0 -m -d /app -s /bin/bash stigrag && \
    chown -R stigrag:0 /app && \
    chmod -R g=u /app

# Copy requirements first for better layer caching
COPY --chown=stigrag:0 requirements.txt /app/

# Install Python dependencies
RUN python3 -m pip install --no-cache-dir --upgrade pip setuptools wheel && \
    python3 -m pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY --chown=stigrag:0 rhel_stig_rag.py /app/
COPY --chown=stigrag:0 stig_client.py /app/
COPY --chown=stigrag:0 stig_data_collector.py /app/

# Create necessary directories
RUN mkdir -p /app/stig_data /app/stig_chroma_db /app/logs /app/tmp && \
    chown -R stigrag:0 /app && \
    chmod -R g+w /app

# Create non-root user configuration
USER stigrag

# Set environment variables
ENV PYTHONPATH=/app \
    PYTHONUNBUFFERED=1 \
    HOME=/app \
    PORT=8000

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Default command
CMD ["python3", "rhel_stig_rag.py"]