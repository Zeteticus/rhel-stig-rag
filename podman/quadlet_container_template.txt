# Quadlet file for STIG RAG Container
# This file enables systemd to manage the Podman container

[Unit]
Description=STIG RAG Container
Wants=network-online.target
After=network-online.target
RequiresMountsFor=%t/containers

[Container]
Image={{ stig_rag_podman_image_name }}
ContainerName={{ stig_rag_podman_container_name }}
Pod={{ stig_rag_podman_pod_name }}.pod

# Environment variables
{% for key, value in stig_rag_podman_env_vars.items() %}
Environment={{ key }}={{ value }}
{% endfor %}

# Volumes
Volume={{ podman_data_dir }}/stig_data:/app/stig_data:Z
Volume={{ podman_data_dir }}/stig_chroma_db:/app/stig_chroma_db:Z
Volume={{ podman_log_dir }}:/app/logs:Z

# Resource limits
Memory={{ stig_rag_podman_memory_limit }}
Cpus={{ stig_rag_podman_cpu_limit }}
PidsLimit={{ stig_rag_podman_pids_limit }}

# Security options
{% for opt in stig_rag_podman_security_opt %}
SecurityLabelType={{ opt }}
{% endfor %}

# Drop capabilities
{% for cap in stig_rag_podman_cap_drop %}
DropCapability={{ cap }}
{% endfor %}

# Health check
HealthCmd=curl -f http://localhost:{{ stig_rag_podman_container_port }}/health || exit 1
HealthInterval={{ stig_rag_podman_health_interval }}
HealthTimeout={{ stig_rag_podman_health_timeout }}
HealthRetries={{ stig_rag_podman_health_retries }}
HealthStartPeriod={{ stig_rag_podman_health_start_period }}

# Restart policy
Restart={{ stig_rag_podman_restart_policy }}

# Labels
Label=app=stig-rag
Label=version={{ stig_rag_version }}
Label=deployment=podman-quadlet

[Install]
WantedBy=default.target