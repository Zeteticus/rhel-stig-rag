---
# Install system dependencies based on OS distribution

- name: Install dependencies for RHEL/CentOS/Fedora
  dnf:
    name:
      - python3
      - python3-pip
      - python3-devel
      - python3-venv
      - git
      - curl
      - unzip
      - gcc
      - gcc-c++
      - make
    state: present
  when: ansible_os_family == "RedHat"

- name: Install dependencies for Ubuntu/Debian
  apt:
    name:
      - python3
      - python3-pip
      - python3-dev
      - python3-venv
      - git
      - curl
      - unzip
      - build-essential
      - pkg-config
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Install dependencies for SUSE
  zypper:
    name:
      - python3
      - python3-pip
      - python3-devel
      - python3-virtualenv
      - git
      - curl
      - unzip
      - gcc
      - gcc-c++
      - make
    state: present
  when: ansible_os_family == "Suse"

- name: Install EPEL repository (RHEL/CentOS)
  dnf:
    name: epel-release
    state: present
  when: 
    - ansible_os_family == "RedHat"
    - ansible_distribution != "Fedora"

- name: Install additional Python packages
  pip:
    name:
      - virtualenv
      - wheel
      - setuptools
    state: present
    executable: pip3

- name: Install system packages for better performance
  package:
    name:
      - htop
      - iotop
      - sysstat
    state: present
  ignore_errors: yes

# Install Docker if containerized deployment is requested
- name: Install Docker (optional)
  include_tasks: docker.yml
  when: stig_rag_docker_enabled | default(false)

# Configure SELinux if present
- name: Check if SELinux is enabled
  command: getenforce
  register: selinux_status
  failed_when: false
  changed_when: false

- name: Install SELinux Python bindings
  package:
    name:
      - python3-libselinux
      - python3-policycoreutils
    state: present
  when: 
    - ansible_os_family == "RedHat"
    - selinux_status.stdout is defined
    - selinux_status.stdout != "Disabled"

- name: Set SELinux contexts for STIG RAG directories
  sefcontext:
    target: "{{ item.path }}"
    setype: "{{ item.setype }}"
    state: present
  with_items:
    - { path: "{{ stig_rag_home }}(/.*)?", setype: "admin_home_t" }
    - { path: "{{ stig_rag_log_dir }}(/.*)?", setype: "var_log_t" }
  when: 
    - ansible_os_family == "RedHat"
    - selinux_status.stdout is defined
    - selinux_status.stdout != "Disabled"
  notify: restorecon stig rag directories

- name: Restore SELinux contexts
  command: restorecon -R {{ item }}
  with_items:
    - "{{ stig_rag_home }}"
    - "{{ stig_rag_log_dir }}"
  when: 
    - ansible_os_family == "RedHat"
    - selinux_status.stdout is defined
    - selinux_status.stdout != "Disabled"
  changed_when: false